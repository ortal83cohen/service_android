apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.jakewharton.hugo'
apply plugin: 'com.fernandocejas.frodo'
apply plugin: 'maven'

//repositories {
//    maven {
//        url "http://mydtbld0023.hpeswlab.net:8081/nexus/content/groups/maas-public/"
//    }
//
//}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        applicationId "com.hpe.sb.mobile.app"
        minSdkVersion 18
        targetSdkVersion 23
        versionCode 9
        versionName "1.1.0"
    }
    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            applicationIdSuffix ".debug"
            versionNameSuffix "-" + buildTime() + "-" + gitSha()
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        disable 'MissingTranslation'
        abortOnError false
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    applicationVariants.all { variant ->
        if (variant.buildType.name == 'release') {
            variant.outputs.each { output ->
                def unalignedOutputFile = output.packageApplication.outputFile

                // 'unaligned' APK
                output.packageApplication.outputFile = new File(unalignedOutputFile.parent, unalignedOutputFile.name.replace("${UNSIGNED_APK_NAME}", "${APK_FILE_NAME_PREFIX}-${android.defaultConfig.versionName}.apk"))
            }
        }
    }
}

ext {
    supportLibVersion = '23.2.1'  // variable that can be referenced to keep support libs consistent
    apkToSign = "${buildDir}${OUTPUT_APK_PATH}${UNSIGNED_APK_NAME}"
    appApk = "${buildDir}${OUTPUT_APK_PATH}${APK_FILE_NAME_PREFIX}-${android.defaultConfig.versionName}.apk"
    apkToSignWithAppPulse = "${buildDir}${OUTPUT_APK_PATH}/app-release-appPulse-unsigned.apk"
    zipalignFullPath = "${ANDROID_HOME}/build-tools/${android.buildToolsVersion}/zipalign"
}



dependencies {
    apt "com.google.dagger:dagger-compiler:2.4"

    compile fileTree(dir: "libs", include: ["*.jar"])

    compile "com.android.support:appcompat-v7:${supportLibVersion}"
    compile "com.android.support:design:${supportLibVersion}"
    compile "com.android.support:recyclerview-v7:${supportLibVersion}"
    compile "com.android.support:cardview-v7:${supportLibVersion}"
    compile "com.google.code.gson:gson:2.6.2"
    compile "com.android.volley:volley:1.0.0"
    compile "com.google.dagger:dagger:2.4"
    compile "com.google.android.gms:play-services-gcm:8.4.0"
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile "io.reactivex:rxjava:1.1.3"
    compile 'com.journeyapps:zxing-android-embedded:3.2.0@aar'
    compile 'com.google.zxing:core:3.2.1'
    compile "com.android.support:appcompat-v7:${supportLibVersion}"
    compile 'me.tatarka.support:jobscheduler:0.1.1'
    testCompile "junit:junit:4.12"
    testCompile "org.mockito:mockito-core:1.9.0"

    androidTestCompile "com.android.support:support-annotations:${supportLibVersion}"
    androidTestCompile "junit:junit:4.12"
    androidTestCompile "com.android.support.test:runner:0.5"
//    // Set this dependency to use JUnit 4 rules
    androidTestCompile "com.android.support.test:rules:0.5"
}


task addAppPulse(type: Exec, dependsOn: 'assemble') {

    workingDir "${System.env.AppPulseSDK_HOME}"

    commandLine 'sh', "AppPulse_mobile.sh", "-skipsigning", "-o", "${apkToSignWithAppPulse}", "-appkey", "${APP_PULSE_TENANT_ID}", "${appApk}"
}

task signApk(type: JavaExec, dependsOn: 'addAppPulse') {
    main = "-jar";
    args = ["${SIGNHP_JAR_FULL_PATH}",
            "-p",
            "${SIGNHP_PROJECT_NAME}",
            "-i",
            "${apkToSignWithAppPulse}",
            "-o",
            "${buildDir}${OUTPUT_APK_PATH}",
            "-noextract"
    ]
}

task zipAlign(type: Exec, dependsOn: 'signApk') {

    executable "${zipalignFullPath}"
    args "-f", "-v", "4", "${apkToSignWithAppPulse}", "${appApk}"

}

task verifyZipAlign(type: Exec, dependsOn: 'zipAlign') {
    //verify apk aligned
    executable "${zipalignFullPath}"
    args "-c", "-v", "4", "${appApk}"

}

task verifySign(type: Exec, dependsOn: 'signApk') {

    executable "$System.env.JAVA_HOME/bin/jarsigner"
    args "-verbose", "-verify", "-certs", "${appApk}"

}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "http://mydtbld0023.hpeswlab.net:8081/nexus/content/repositories/${apkRepoPath}/") {
                authentication(userName: mavenUser, password: mavenPassword)
            }
            if (apkRepoPath.contains("snapshot")) {

                pom.version = "${android.defaultConfig.versionName}-SNAPSHOT"
            } else {

                pom.version = "${android.defaultConfig.versionName}"
            }
            pom.artifactId = "${APK_FILE_NAME_PREFIX}"
            pom.groupId = "com.hpe.saw.mobile"
        }
    }
}
